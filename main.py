import discord
from discord.ext import commands
import datetime
import json
import os
from keep_alive import keep_alive

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

DATA_FILE = "user_data.json"

def load_data():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return {}

def save_data():
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(user_data, f, ensure_ascii=False, indent=2)

user_data = load_data()

def get_user_data(user_id):
    user_id = str(user_id)
    if user_id not in user_data:
        user_data[user_id] = {
            "–¥–æ—Ö–æ–¥—ã": [],
            "—Ä–∞—Å—Ö–æ–¥—ã": [],
            "–∞—Ä–µ–Ω–¥–∞": [],
            "–Ω–∞—á–∞–ª—å–Ω—ã–π_–±–∞–ª–∞–Ω—Å": 0
        }
        save_data()
    return user_data[user_id]

# ---------------- –ö–Ω–æ–ø–∫–∏ ----------------

class –î–æ—Ö–æ–¥Button(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üí∞ –î–æ—Ö–æ–¥", style=discord.ButtonStyle.success, custom_id="btn_income")

    async def callback(self, interaction: discord.Interaction):
        modal = IncomeModal(user_id=interaction.user.id)
        await interaction.response.send_modal(modal)

class –†–∞—Å—Ö–æ–¥Button(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üî¥ –†–∞—Å—Ö–æ–¥", style=discord.ButtonStyle.danger, custom_id="btn_expense")

    async def callback(self, interaction: discord.Interaction):
        modal = ExpenseModal(user_id=interaction.user.id)
        await interaction.response.send_modal(modal)

class –ê—Ä–µ–Ω–¥–∞Button(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üöó –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ", style=discord.ButtonStyle.success, custom_id="btn_rental")

    async def callback(self, interaction: discord.Interaction):
        modal = RentalModal(user_id=interaction.user.id)
        await interaction.response.send_modal(modal)

class –ë–∞–ª–∞–Ω—ÅButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üìä –ë–∞–ª–∞–Ω—Å", style=discord.ButtonStyle.primary, custom_id="btn_balance")

    async def callback(self, interaction: discord.Interaction):
        data = get_user_data(interaction.user.id)
        –¥–æ—Ö–æ–¥ = sum(entry['—Å—É–º–º–∞'] for entry in data["–¥–æ—Ö–æ–¥—ã"])
        —Ä–∞—Å—Ö–æ–¥ = sum(entry['—Å—É–º–º–∞'] for entry in data["—Ä–∞—Å—Ö–æ–¥—ã"])
        –∞—Ä–µ–Ω–¥–∞ = sum(entry['–ø—Ä–∏–±—ã–ª—å'] for entry in data["–∞—Ä–µ–Ω–¥–∞"])
        –∏—Ç–æ–≥ = data["–Ω–∞—á–∞–ª—å–Ω—ã–π_–±–∞–ª–∞–Ω—Å"] + –¥–æ—Ö–æ–¥ + –∞—Ä–µ–Ω–¥–∞ - —Ä–∞—Å—Ö–æ–¥
        text = (
            f"üèÅ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {data['–Ω–∞—á–∞–ª—å–Ω—ã–π_–±–∞–ª–∞–Ω—Å']} —Ä—É–±.\n"
            f"üí∞ –î–æ—Ö–æ–¥—ã: {–¥–æ—Ö–æ–¥} —Ä—É–±.\nüî¥ –†–∞—Å—Ö–æ–¥—ã: {—Ä–∞—Å—Ö–æ–¥} —Ä—É–±.\nüöó –ê—Ä–µ–Ω–¥–∞: {–∞—Ä–µ–Ω–¥–∞} —Ä—É–±.\n\n"
            f"üìå –ò—Ç–æ–≥: **{–∏—Ç–æ–≥} —Ä—É–±.**"
        )
        await interaction.response.send_message(text, ephemeral=True)

class –ò—Å—Ç–æ—Ä–∏—èButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üìñ –ò—Å—Ç–æ—Ä–∏—è", style=discord.ButtonStyle.secondary, custom_id="btn_history")

    async def callback(self, interaction: discord.Interaction):
        data = get_user_data(interaction.user.id)
        history = ""
        for entry in data["–¥–æ—Ö–æ–¥—ã"]:
            history += f"üí∞ –î–æ—Ö–æ–¥: {entry['—Å—É–º–º–∞']} —Ä—É–±. - {entry['–æ–ø–∏—Å–∞–Ω–∏–µ']} ({entry['–¥–∞—Ç–∞']})\n"
        for entry in data["—Ä–∞—Å—Ö–æ–¥—ã"]:
            history += f"üî¥ –†–∞—Å—Ö–æ–¥: {entry['—Å—É–º–º–∞']} —Ä—É–±. - {entry['–æ–ø–∏—Å–∞–Ω–∏–µ']} ({entry['–¥–∞—Ç–∞']})\n"
        for entry in data["–∞—Ä–µ–Ω–¥–∞"]:
            history += f"üöó –ê—Ä–µ–Ω–¥–∞: {entry['–ø—Ä–∏–±—ã–ª—å']} —Ä—É–±. ({entry['–º–∞—à–∏–Ω–∞']}, {entry['—á–∞—Å—ã']} —á., {entry['–¥–∞—Ç–∞']})\n"
        if not history:
            history = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö."
        await interaction.response.send_message(history, ephemeral=True)

class –û—á–∏—Å—Ç–∏—Ç—åButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å", style=discord.ButtonStyle.danger, custom_id="btn_clear")

    async def callback(self, interaction: discord.Interaction):
        view = –û—á–∏—Å—Ç–∫–∞–í—ã–±–æ—ÄView(user_id=interaction.user.id)
        await interaction.response.send_message("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å?", view=view, ephemeral=True)

class –ù–∞—á–∞–ª—å–Ω—ã–π–ë–∞–ª–∞–Ω—ÅButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üèÅ –ù–∞—á. –±–∞–ª–∞–Ω—Å", style=discord.ButtonStyle.success, custom_id="btn_start_balance")

    async def callback(self, interaction: discord.Interaction):
        modal = –ù–∞—á–∞–ª—å–Ω—ã–π–ë–∞–ª–∞–Ω—ÅModal(user_id=interaction.user.id)
        await interaction.response.send_modal(modal)

# ---------------- –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ ----------------

class IncomeModal(discord.ui.Modal, title="–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥"):
    def __init__(self, user_id):
        super().__init__()
        self.user_id = user_id

    —Å—É–º–º–∞ = discord.ui.TextInput(label="–°—É–º–º–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É", required=True)
    –æ–ø–∏—Å–∞–Ω–∏–µ = discord.ui.TextInput(label="–û–ø–∏—Å–∞–Ω–∏–µ", placeholder="–ü—Ä–æ–¥–∞–∂–∞, –ø—Ä–µ–º–∏—è –∏ —Ç.–¥.", required=False)

    async def on_submit(self, interaction: discord.Interaction):
        data = get_user_data(self.user_id)
        data["–¥–æ—Ö–æ–¥—ã"].append({
            "—Å—É–º–º–∞": int(self.—Å—É–º–º–∞.value),
            "–æ–ø–∏—Å–∞–Ω–∏–µ": self.–æ–ø–∏—Å–∞–Ω–∏–µ.value,
            "–¥–∞—Ç–∞": datetime.datetime.now().strftime("%d.%m.%Y")
        })
        save_data()
        await interaction.response.send_message("‚úÖ –î–æ—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω!", ephemeral=True)

class ExpenseModal(discord.ui.Modal, title="–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥"):
    def __init__(self, user_id):
        super().__init__()
        self.user_id = user_id

    —Å—É–º–º–∞ = discord.ui.TextInput(label="–°—É–º–º–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É", required=True)
    –æ–ø–∏—Å–∞–Ω–∏–µ = discord.ui.TextInput(label="–û–ø–∏—Å–∞–Ω–∏–µ", placeholder="–ü–æ–∫—É–ø–∫–∞, —à—Ç—Ä–∞—Ñ –∏ —Ç.–¥.", required=False)

    async def on_submit(self, interaction: discord.Interaction):
        data = get_user_data(self.user_id)
        data["—Ä–∞—Å—Ö–æ–¥—ã"].append({
            "—Å—É–º–º–∞": int(self.—Å—É–º–º–∞.value),
            "–æ–ø–∏—Å–∞–Ω–∏–µ": self.–æ–ø–∏—Å–∞–Ω–∏–µ.value,
            "–¥–∞—Ç–∞": datetime.datetime.now().strftime("%d.%m.%Y")
        })
        save_data()
        await interaction.response.send_message("‚úÖ –†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω!", ephemeral=True)

class RentalModal(discord.ui.Modal, title="–î–æ–±–∞–≤–∏—Ç—å –∞—Ä–µ–Ω–¥—É –∞–≤—Ç–æ"):
    def __init__(self, user_id):
        super().__init__()
        self.user_id = user_id

    –º–∞—à–∏–Ω–∞ = discord.ui.TextInput(label="–ê–≤—Ç–æ–º–æ–±–∏–ª—å", placeholder="–ú–æ–¥–µ–ª—å –º–∞—à–∏–Ω—ã", required=True)
    —á–∞—Å—ã = discord.ui.TextInput(label="–ß–∞—Å—ã –∞—Ä–µ–Ω–¥—ã", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 3", required=True)
    —Å—Ç–æ–∏–º–æ—Å—Ç—å_—á–∞—Å–∞ = discord.ui.TextInput(label="–¶–µ–Ω–∞ –∑–∞ —á–∞—Å", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 500", required=True)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            —á–∞—Å—ã = float(self.—á–∞—Å—ã.value)
            —Ü–µ–Ω–∞ = float(self.—Å—Ç–æ–∏–º–æ—Å—Ç—å_—á–∞—Å–∞.value)
            –ø—Ä–∏–±—ã–ª—å = —á–∞—Å—ã * —Ü–µ–Ω–∞
            data = get_user_data(self.user_id)
            data["–∞—Ä–µ–Ω–¥–∞"].append({
                "–º–∞—à–∏–Ω–∞": self.–º–∞—à–∏–Ω–∞.value,
                "—á–∞—Å—ã": —á–∞—Å—ã,
                "–ø—Ä–∏–±—ã–ª—å": –ø—Ä–∏–±—ã–ª—å,
                "–¥–∞—Ç–∞": datetime.datetime.now().strftime("%d.%m.%Y")
            })
            save_data()
            await interaction.response.send_message(f"‚úÖ –ê—Ä–µ–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {–ø—Ä–∏–±—ã–ª—å} —Ä—É–±.", ephemeral=True)
        except ValueError:
            await interaction.response.send_message("‚ùå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–∞.", ephemeral=True)

class –ù–∞—á–∞–ª—å–Ω—ã–π–ë–∞–ª–∞–Ω—ÅModal(discord.ui.Modal, title="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å"):
    def __init__(self, user_id):
        super().__init__()
        self.user_id = user_id

    —Å—É–º–º–∞ = discord.ui.TextInput(label="–°—É–º–º–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É", required=True)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            —Å—É–º–º–∞ = int(self.—Å—É–º–º–∞.value)
            data = get_user_data(self.user_id)
            data["–Ω–∞—á–∞–ª—å–Ω—ã–π_–±–∞–ª–∞–Ω—Å"] = —Å—É–º–º–∞
            save_data()
            await interaction.response.send_message(f"‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {—Å—É–º–º–∞} —Ä—É–±.", ephemeral=True)
        except ValueError:
            await interaction.response.send_message("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (—á–∏—Å–ª–æ).", ephemeral=True)

# ---------------- –û—á–∏—Å—Ç–∫–∞ ----------------

class –û—á–∏—Å—Ç–∫–∞–í—ã–±–æ—ÄView(discord.ui.View):
    def __init__(self, user_id):
        super().__init__(timeout=60)
        self.user_id = user_id

        self.add_item(–û—á–∏—Å—Ç–∏—Ç—å–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æButton("–¥–æ—Ö–æ–¥—ã", "üí∞ –î–æ—Ö–æ–¥—ã"))
        self.add_item(–û—á–∏—Å—Ç–∏—Ç—å–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æButton("—Ä–∞—Å—Ö–æ–¥—ã", "üî¥ –†–∞—Å—Ö–æ–¥—ã"))
        self.add_item(–û—á–∏—Å—Ç–∏—Ç—å–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æButton("–∞—Ä–µ–Ω–¥–∞", "üöó –ê—Ä–µ–Ω–¥–∞"))
        self.add_item(–û—á–∏—Å—Ç–∏—Ç—å–ë–∞–ª–∞–Ω—ÅButton())

class –û—á–∏—Å—Ç–∏—Ç—å–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æButton(discord.ui.Button):
    def __init__(self, field, label):
        super().__init__(label=label, style=discord.ButtonStyle.secondary, custom_id=f"clear_{field}")
        self.field = field

    async def callback(self, interaction: discord.Interaction):
        data = get_user_data(interaction.user.id)
        data[self.field] = []
        save_data()
        await interaction.response.send_message(f"‚úÖ {self.label} –æ—á–∏—â–µ–Ω—ã.", ephemeral=True)

class –û—á–∏—Å—Ç–∏—Ç—å–ë–∞–ª–∞–Ω—ÅButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üìâ –ë–∞–ª–∞–Ω—Å (–≤—Å—ë)", style=discord.ButtonStyle.danger, custom_id="clear_all")

    async def callback(self, interaction: discord.Interaction):
        data = get_user_data(interaction.user.id)
        data["–¥–æ—Ö–æ–¥—ã"] = []
        data["—Ä–∞—Å—Ö–æ–¥—ã"] = []
        data["–∞—Ä–µ–Ω–¥–∞"] = []
        data["–Ω–∞—á–∞–ª—å–Ω—ã–π_–±–∞–ª–∞–Ω—Å"] = 0
        save_data()
        await interaction.response.send_message("‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω.", ephemeral=True)

# ---------------- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ----------------

class FinanceView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(–î–æ—Ö–æ–¥Button())
        self.add_item(–†–∞—Å—Ö–æ–¥Button())
        self.add_item(–ê—Ä–µ–Ω–¥–∞Button())
        self.add_item(–ë–∞–ª–∞–Ω—ÅButton())
        self.add_item(–ò—Å—Ç–æ—Ä–∏—èButton())
        self.add_item(–ù–∞—á–∞–ª—å–Ω—ã–π–ë–∞–ª–∞–Ω—ÅButton())
        self.add_item(–û—á–∏—Å—Ç–∏—Ç—åButton())

@bot.command(name="—Ñ–∏–Ω–∞–Ω—Å—ã")
async def —Ñ–∏–Ω–∞–Ω—Å—ã(ctx):
    embed = discord.Embed(
        title="–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤",
        description="–¢–µ–ø–µ—Ä—å –Ω–µ –ø—Ä–∏–¥—ë—Ç—Å—è –ø–æ–º–Ω–∏—Ç—å –æ –¥–æ—Ö–æ–¥–∞—Ö –∏ —Ä–∞—Å—Ö–æ–¥–∞—Ö ‚Äî –±–æ—Ç —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ —Å–∞–º.",
        color=discord.Color.purple()
    )
    embed.set_image(url="https://i.imgur.com/jOmamcY.png")
    await ctx.send(embed=embed, view=FinanceView())

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤")
    bot.add_view(FinanceView())

keep_alive()
bot.run(os.environ["DISCORD_TOKEN"])